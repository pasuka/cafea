!**********************************************************************
!*               Begin marco                                          *
!**********************************************************************
*create, export_cafea,

! Initialize.
/prep7
/nopr

! Load CDB file.
/input, ARG1, cdb, %ARG3%%ARG2%

! Get parameter of variables.
*get, num_node, node, 0, count
*get, num_elem, elem, 0, count
*get, num_matp,  mat, 0, num, max
*get, num_etyp, etyp, 0, num, max
*get, num_rcon, rcon, 0, num, max

! Allocate variables array.
*dim, node_list, array, num_node, 7
*dim, elem_list, array, num_elem, 25
*dim, etyp_list, array, num_etyp, 13
*dim, matp_list, array, num_matp, 6
*dim, rcon_list, array, num_rcon, 14

! Get min id of nodes.
*get, node_iter, node, 0, num, min
! Loop for nodes.
*do, i, 1, num_node, 1
	node_list(i, 1) = node_iter
	node_list(i, 2) = nx(node_iter)
	node_list(i, 3) = ny(node_iter)
	node_list(i, 4) = nz(node_iter)
	! Euler angles.
	*get, node_list(i, 5), node, node_iter, ang, xy
	*get, node_list(i, 6), node, node_iter, ang, yz
	*get, node_list(i, 7), node, node_iter, ang, zx
	node_iter = ndnext(node_iter)
*enddo

! Get min id of elements.
*get, elem_iter, elem, 0, num, min
*set, tmp, 0
! Loop for elements.
*do, i, 1, num_elem, 1
	elem_list(i, 1) = elem_iter
	*get, elem_list(i, 2), elem, elem_iter, attr, mat
	*get, elem_list(i, 3), elem, elem_iter, attr, type
	*get, elem_list(i, 4), elem, elem_iter, attr, real
	*get, elem_list(i, 5), elem, elem_iter, attr, secn
	*do, j, 1, 20, 1
		! Only supports 8 nodes per element in output file.
		tmp = nelem(elem_iter, j)
		*if, tmp, gt, 0, then
			elem_list(i, 5+j) = tmp
		*else
			*exit
		*endif
	*enddo
	matp_list(elem_list(i, 2), 1) = 1
	etyp_list(elem_list(i, 3), 1) = 1
	rcon_list(elem_list(i, 4), 1) = 1
	elem_iter = elnext(elem_iter)
*enddo

*vscfun, n_matp, sum, matp_list(1, 1)
*vscfun, n_etyp, sum, etyp_list(1, 1)
*vscfun, n_rcon, sum, rcon_list(1, 1)

! Loop for element types.
*do, i, 1, num_etyp, 1
	*if, etyp_list(i, 1), ne, 1, cycle
	etyp_list(i, 1) = i
	*get, etyp_list(i,  2), etyp, i, attr, enam
	*get, etyp_list(i,  3), etyp, i, attr, kop1
	*get, etyp_list(i,  4), etyp, i, attr, kop2
	*get, etyp_list(i,  5), etyp, i, attr, kop3
	*get, etyp_list(i,  6), etyp, i, attr, kop4
	*get, etyp_list(i,  7), etyp, i, attr, kop5
	*get, etyp_list(i,  8), etyp, i, attr, kop6
	*get, etyp_list(i,  9), etyp, i, attr, kop7
	*get, etyp_list(i, 10), etyp, i, attr, kop8
	*get, etyp_list(i, 11), etyp, i, attr, kop9
	*get, etyp_list(i, 12), etyp, i, attr, ko10
	*get, etyp_list(i, 13), etyp, i, attr, ko11
*enddo

! Loop for materials.
*do, i, 1, num_matp, 1
	*if, matp_list(i, 1), ne, 1, cycle
	matp_list(i, 1) = i
	*get, matp_list(i, 2), dens, i
	*get, matp_list(i, 3), ex  , i
	*get, matp_list(i, 4), gxy , i
	*get, matp_list(i, 5), nuxy, i
	*get, matp_list(i, 6), prxy, i
*enddo

! Loop for real constants.
*do, i, 1, num_rcon, 1
	*if, rcon_list(i, 1), ne, 1, cycle
	rcon_list(i, 1) = i
	*do, j, 1, 13, 1
		*get, rcon_list(i, j+1), rcon, i, const, j
	*enddo
*enddo

! Write output file.
*cfopen, %ARG3%%ARG2%%ARG1%, txt
*vwrite
('$NODE')
*vwrite,num_node
%8I
*vwrite,node_list(1,1),node_list(1,2),node_list(1,3),node_list(1,4),node_list(1,5),node_list(1,6),node_list(1,7)
%8I,%12.5G,%12.5G,%12.5G,%7.2F,%7.2F,%7.2F
*vwrite
('$ENDNODE')
*vwrite
('$ELEMENT')
*vwrite,num_elem
%8I
*vwrite,elem_list(1,1),elem_list(1,2),elem_list(1,3),elem_list(1,4),elem_list(1,5),elem_list(1,6),elem_list(1,7),elem_list(1,8),elem_list(1,9),elem_list(1,10),elem_list(1,11),elem_list(1,12),elem_list(1,13)
%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I
*vwrite
('$ENDELEMENT')
*vwrite
('$TYPE')
*vwrite,n_etyp
%8I
*vmask,etyp_list(1, 1)
*vwrite,etyp_list(1,1),etyp_list(1,2),etyp_list(1,3),etyp_list(1,4),etyp_list(1,5),etyp_list(1,6),etyp_list(1,7),etyp_list(1,8),etyp_list(1,9),etyp_list(1,10),etyp_list(1,11),etyp_list(1,12),etyp_list(1,13)
%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I,%8I
*vwrite
('$ENDTYPE')
*vwrite
('$MATERIAL')
*vwrite,n_matp
%8I
*vmask,matp_list(1, 1)
*vwrite,matp_list(1,1),matp_list(1,2),matp_list(1,3),matp_list(1,4),matp_list(1,5),matp_list(1,6)
%8I,%16.9E,%16.9E,%16.9E,%16.9E,%16.9E
*vwrite
('$ENDMATERIAL')
*vwrite
('$RCONST')
*vwrite,n_rcon
%8I
*vmask,rcon_list(1, 1)
*vwrite,rcon_list(1,1),rcon_list(1,2),rcon_list(1,3),rcon_list(1,4),rcon_list(1,5),rcon_list(1,6),rcon_list(1,7)
%8I,%16.9E,%16.9E,%16.9E,%16.9E,%16.9E,%16.9E
*vwrite
('$ENDRCONST')
*cfclose

*del, num_node
*del, num_elem
*del, num_matp
*del, num_etyp
*del, num_node
*del, num_rcon

*del, n_matp
*del, n_etyp
*del, n_rcon

*del, node_list
*del, elem_list
*del, etyp_list
*del, matp_list
*del, rcon_list

! End of marco.
*end

!**********************************************************************
!**********************************************************************
/clear, nostart
fn_dir = 'E:\cpp_code\'
*use, export_cafea, 'pipe_demo_01', 'cafea\test\ansys\', fn_dir
*use, export_cafea, 'pipe_demo_02', 'cafea\test\ansys\', fn_dir
*use, export_cafea, 'pipe_demo_03', 'cafea\test\ansys\', fn_dir
*use, export_cafea,  'nrc1677_1_1', 'cafea\test\ansys\', fn_dir
*use, export_cafea,  'nrc1677_1_2', 'cafea\test\ansys\', fn_dir
*use, export_cafea,  'nrc1677_1_3', 'cafea\test\ansys\', fn_dir
*use, export_cafea,  'nrc1677_1_4', 'cafea\test\ansys\', fn_dir
*use, export_cafea,  'nrc1677_1_5', 'cafea\test\ansys\', fn_dir
*use, export_cafea,  'nrc1677_1_6', 'cafea\test\ansys\', fn_dir
*use, export_cafea,  'nrc1677_1_7', 'cafea\test\ansys\', fn_dir
finish